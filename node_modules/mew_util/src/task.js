var childProcess = require("child_process");

if (/^win/i.test(process.platform)) {
    process.on("SIGINT", function () {
        process.exit(1);
    });
}

var murder = function (task) {
    try {
        if (/^win/i.test(process.platform)) {
            task.kill("SIGINT");
        } else {
            task.kill("SIGHUP");
        }
    } catch (error) {
        // Do nothing
    }
};

var suicide = function () {
    if (/^win/i.test(process.platform)) {
        process.exit(1);
    } else {
        process.exit(-1);
    }
};

// -> command, switches, callback
// -> command, switches, silent, callback
//
var executeCommand = function (command, switches) {

    var silent = false;
    var callback = null;
    if (arguments[2] instanceof Function) {
        callback = arguments[2];
    } else {
        silent = arguments[2];
        if (arguments[3] instanceof Function) {
            callback = arguments[3];
        }
    }

    if (!callback) {
        callback = function (error) {
            if (error) {
                throw error;
            }
        };
    }

    var spawnedProcess = childProcess.spawn(command, switches);

    var buffers = [];

    spawnedProcess.stdout.on("data", function (data) {

        if (!silent) {
            process.stdout.write(data);
        }

        buffers.push(data);

    });

    spawnedProcess.stderr.on("data", function (data) {
        if (!silent) {
            process.stderr.write(data);
        }
    });

    spawnedProcess.on("close", function (code) {

        if (code !== 0) {
            callback(new Error("Exit code not zero: " + command));
        } else {
            callback(null, Buffer.concat(buffers));
        }

    });

};

module.exports = {
    "executeCommand": executeCommand,
    "murder": murder,
    "suicide": suicide
};
